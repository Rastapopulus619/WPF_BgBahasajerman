<UserControl x:Class="BgB_TeachingAssistant.Views.BookedSlotsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BgB_TeachingAssistant.Views"
             xmlns:helpers="clr-namespace:BgB_TeachingAssistant.Helpers"
             xmlns:converters="clr-namespace:BgB_TeachingAssistant.Helpers.Converters"
             xmlns:attached="clr-namespace:BgB_TeachingAssistant.Helpers.AttachedProperties"
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:viewmodels="clr-namespace:BgB_TeachingAssistant.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:BookedSlotsViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="#18191a"
             Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <ResourceDictionary>
            <!-- Add the RowHeightConverter -->
            <converters:RowHeightConverter x:Key="RowHeightConverter" />
            <converters:ValidationToBackgroundConverter x:Key="ValidationToBackgroundConverter" />

            <!-- Merge External Style Files -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Styles/DataGrid/DataGridStyles.xaml" />
                <ResourceDictionary Source="Resources/Styles/DataGrid/DataGridControlStyles.xaml" />
                <ResourceDictionary Source="Resources/Styles/DataGrid/DataGridColumnHeaderStyles.xaml" />
                <ResourceDictionary Source="Resources/Styles/DataGrid/DataGridRowHeaderStyles.xaml" />
                <ResourceDictionary Source="Resources/Styles/DataGrid/DataGridCellStyles.xaml" />
                <ResourceDictionary Source="Resources/Styles/Buttons/Buttons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <!-- Ctrl+S for Save -->
        <KeyBinding Command="{Binding SaveChangesCommand}" Key="S" Modifiers="Control" />
        <!-- Ctrl+C for Cancel -->
        <KeyBinding Command="{Binding RevertChangesCommand}" Key="R" Modifiers="Control" />
    </UserControl.InputBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <Border Background="#353535" Grid.Row="0" Grid.Column="0" Margin="10" CornerRadius="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <!-- For the TextBlock -->
                    <RowDefinition Height="*" />
                    <!-- For the DataGrid to fill remaining space -->
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Text="TimeTable" Grid.Row="0" Foreground="White" HorizontalAlignment="Center" Margin="5"/>
                <DataGrid x:Name="TimetableDataGrid" Grid.Row="1"
                          Style="{StaticResource DataGridTimeTableStyle}"
                          CellStyle="{Binding CurrentCellStyle}"
                          ItemsSource="{Binding TimetableData}" 
                          ColumnHeaderStyle="{StaticResource TimeTableColumnHeaderStyle}"
                          CurrentCellChanged="StreamlineEditOnSelect"
                          SelectionMode="Single"
                          CanUserResizeRows="False"
                          CanUserResizeColumns="False"
                          CanUserSortColumns="False"
                          CanUserReorderColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False" 
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch" 
                          SelectionUnit="Cell" 
                          HorizontalGridLinesBrush="White" 
                          VerticalGridLinesBrush="White">

                    <!-- Apply Row Header Style with Content Binding -->
                    <DataGrid.RowHeaderStyle>
                        <Style TargetType="DataGridRowHeader" BasedOn="{StaticResource TimeTableRowHeaderStyle}">
                            <Setter Property="Content" Value="{Binding Zeiten}" />
                        </Style>
                    </DataGrid.RowHeaderStyle>

                    <!-- Bind RowHeight dynamically -->
                    <DataGrid.RowHeight>
                        <MultiBinding Converter="{StaticResource RowHeightConverter}">
                            <Binding Path="ActualHeight" ElementName="TimetableDataGrid" />
                            <Binding Path="TimetableData.Count" />
                        </MultiBinding>
                    </DataGrid.RowHeight>

                    <!-- Fixed Time Slot Column -->
                    <DataGrid.Columns>
                        <!-- Montag Column -->
                        <DataGridTemplateColumn Header="Montag" Width="*">
                            <!-- Read-Only Template -->
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Montag.Name, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource DataGridTextBlockStyle}" TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <!-- Dynamic Foreground Color Based on Validation -->
                                                    <DataTrigger Binding="{Binding Montag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Montag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="White" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <!-- Editable Template -->
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Montag.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource DataGridEditableTextBoxStyle}" TargetType="TextBox">
                                                <Style.Triggers>
                                                    <!-- Trigger for Focused State -->
                                                    <Trigger Property="IsFocused" Value="True">
                                                    </Trigger>
                                                    <!-- Validation Triggers -->
                                                    <DataTrigger Binding="{Binding Montag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Montag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- Repeat the same structure for each day -->

                        <!-- Dienstag Column -->
                        <DataGridTemplateColumn Header="Dienstag" Width="*">
                            <!-- Read-Only Template -->
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Dienstag.Name, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource DataGridTextBlockStyle}" TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <!-- Dynamic Foreground Color Based on Validation -->
                                                    <DataTrigger Binding="{Binding Dienstag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Dienstag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="White" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <!-- Editable Template -->
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Dienstag.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource DataGridEditableTextBoxStyle}" TargetType="TextBox">
                                                <Style.Triggers>
                                                    <!-- Trigger for Focused State -->
                                                    <Trigger Property="IsFocused" Value="True">
                                                    </Trigger>
                                                    <!-- Validation Triggers -->
                                                    <DataTrigger Binding="{Binding Dienstag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Dienstag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- Mittwoch Column -->
                        <DataGridTemplateColumn Header="Mittwoch" Width="*">
                            <!-- Read-Only Template -->
                            <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Mittwoch.Name, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource DataGridTextBlockStyle}" TargetType="TextBlock">
                                            <Style.Triggers>
                                                <!-- Dynamic Foreground Color Based on Validation -->
                                                <DataTrigger Binding="{Binding Mittwoch.IsValid}" Value="False">
                                                    <Setter Property="Foreground" Value="Red" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Mittwoch.IsValid}" Value="True">
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                        <!-- Editable Template -->
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Mittwoch.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource DataGridEditableTextBoxStyle}" TargetType="TextBox">
                                            <Style.Triggers>
                                                <!-- Trigger for Focused State -->
                                                <Trigger Property="IsFocused" Value="True" />
                                                <!-- Validation Triggers -->
                                                <DataTrigger Binding="{Binding Mittwoch.IsValid}" Value="False">
                                                    <Setter Property="Foreground" Value="Red" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Mittwoch.IsValid}" Value="True">
                                                    <Setter Property="Foreground" Value="Green" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>


                        </DataGridTemplateColumn>
                        <!-- Donnerstag Column -->
                        <DataGridTemplateColumn Header="Donnerstag" Width="*">
                            <!-- Read-Only Template -->
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Donnerstag.Name, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource DataGridTextBlockStyle}" TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <!-- Dynamic Foreground Color Based on Validation -->
                                                    <DataTrigger Binding="{Binding Donnerstag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Donnerstag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="White" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <!-- Editable Template -->
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Donnerstag.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource DataGridEditableTextBoxStyle}" TargetType="TextBox">
                                                <Style.Triggers>
                                                    <!-- Trigger for Focused State -->
                                                    <Trigger Property="IsFocused" Value="True">
                                                    </Trigger>
                                                    <!-- Validation Triggers -->
                                                    <DataTrigger Binding="{Binding Donnerstag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Donnerstag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- Freitag Column -->
                        <DataGridTemplateColumn Header="Freitag" Width="*">
                            <!-- Read-Only Template -->
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Freitag.Name, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource DataGridTextBlockStyle}" TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <!-- Dynamic Foreground Color Based on Validation -->
                                                    <DataTrigger Binding="{Binding Freitag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Freitag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="White" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <!-- Editable Template -->
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Freitag.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource DataGridEditableTextBoxStyle}" TargetType="TextBox">
                                                <Style.Triggers>
                                                    <!-- Trigger for Focused State -->
                                                    <Trigger Property="IsFocused" Value="True">
                                                    </Trigger>
                                                    <!-- Validation Triggers -->
                                                    <DataTrigger Binding="{Binding Freitag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Freitag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- Samstag Column -->
                        <DataGridTemplateColumn Header="Samstag" Width="*">
                            <!-- Read-Only Template -->
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Samstag.Name, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource DataGridTextBlockStyle}" TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <!-- Dynamic Foreground Color Based on Validation -->
                                                    <DataTrigger Binding="{Binding Samstag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Samstag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="White" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <!-- Editable Template -->
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Samstag.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource DataGridEditableTextBoxStyle}" TargetType="TextBox">
                                                <Style.Triggers>
                                                    <!-- Trigger for Focused State -->
                                                    <Trigger Property="IsFocused" Value="True">
                                                    </Trigger>
                                                    <!-- Validation Triggers -->
                                                    <DataTrigger Binding="{Binding Samstag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Samstag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <!-- Sonntag Column -->
                        <DataGridTemplateColumn Header="Sonntag" Width="*">
                            <!-- Read-Only Template -->
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Sonntag.Name, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource DataGridTextBlockStyle}" TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <!-- Dynamic Foreground Color Based on Validation -->
                                                    <DataTrigger Binding="{Binding Sonntag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Sonntag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="White" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <!-- Editable Template -->
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Sonntag.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <TextBox.Style>
                                            <Style BasedOn="{StaticResource DataGridEditableTextBoxStyle}" TargetType="TextBox">
                                                <Style.Triggers>
                                                    <!-- Trigger for Focused State -->
                                                    <Trigger Property="IsFocused" Value="True">
                                                    </Trigger>
                                                    <!-- Validation Triggers -->
                                                    <DataTrigger Binding="{Binding Sonntag.IsValid}" Value="False">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Sonntag.IsValid}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>

                    <!-- Value="{Binding ShowLevelsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}" /> -->

                    <DataGrid.Resources>
                        <Style TargetType="Button" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
                            <Setter Property="Opacity" Value="0" />
                            <Setter Property="Background" Value="#353535" />
                            <Setter Property="BorderBrush" Value="#FFFFFF" />
                        </Style>
                    </DataGrid.Resources>

                </DataGrid>
                    <TextBlock Text="TimeTable" Grid.Row="2" Foreground="#353535" HorizontalAlignment="Center" Margin="5"/>
            </Grid>
            
            
        </Border>
        <Border Grid.Row="1" Background="#353535" Grid.ColumnSpan="3" Margin="10" CornerRadius="10" VerticalAlignment="Stretch">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <!-- Define three equal columns for the main layout -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <!-- Left Section: Buttons in a vertical arrangement -->
                <Grid Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" Content="Save Changes" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding SaveChangesCommand}" Style="{StaticResource SaveButton}" IsEnabled="{Binding CanSave}"/>
                    <Button Grid.Row="1" Content="Cancel Changes" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding RevertChangesCommand}" Style="{StaticResource SaveButton}"  IsEnabled="{Binding CanCancel}"/>
                </Grid>

                <!-- Middle Section with Centered TextBlock -->
                <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                <!-- <Button Grid.Column="1"  -->
                <!--         Content="Show/Hide Levels"  -->
                <!--         Command="{Binding ToggleShowLevels}"  -->
                <!--         HorizontalAlignment="Center"  -->
                <!--         VerticalAlignment="Bottom"  -->
                <!--         Margin="0,0,0,0" /> -->
                <Button Content="Show/Hide Levels"
                        Click="ToggleShowLevelsButton_Click"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom" />
                    <Button Grid.Column="1" 
                        Content="Switch CellStyle" 
                        Command="{Binding ToggleCellStyleCommand}" 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Bottom" 
                        Margin="0,0,0,0" />
                <Button Grid.Column="1" 
                        Content="Toggle Visibility" 
                        Command="{Binding ToggleContentVisibilityCommand}" 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Bottom" 
                        Margin="0,0,0,0" />
                <TextBlock Grid.Column="1" 
                           Text="What is Content" 
                           Foreground="White" 
                           FontSize="12" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"
                           attached:BookedSlotsVisibilityBehavior.IsContentVisible="{Binding IsContentVisible}" />
                </StackPanel>

                <!-- Right Section with TextBox -->
                <StackPanel Grid.Column="2" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="Edit the value in the TextBox below:" 
                       FontSize="16" Margin="0,0,0,10"
                       HorizontalAlignment="Center" />
                    <TextBox Text="{Binding TestValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                     FontSize="16" Width="200" HorizontalAlignment="Center" />
                    <TextBlock Text="{Binding CurrentCellStyle.(Style.BasedOn)}" 
                               FontSize="16"
                               Foreground="White" 
                               HorizontalAlignment="Center" />
                    <TextBlock Text="{Binding ShowLevelsEnabled}" Foreground="White" />
                </StackPanel>
            </Grid>
        </Border>

    </Grid>
</UserControl>
