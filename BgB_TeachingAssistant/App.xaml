<Application x:Class="BgB_TeachingAssistant.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BgB_TeachingAssistant"
             xmlns:helpers="clr-namespace:BgB_TeachingAssistant.Helpers">
    
            <!-- StartupUri="MainWindow.xaml"-->
    
            <!-- 
    
                The StartupUri property defines the initial window that is shown when the application starts.
                If you are configuring the startup window programmatically in the App.xaml.cs file or using 
                dependency injection to manage the application's main window, you might remove the StartupUri 
                line. Removing this line allows for greater flexibility in determining the startup sequence 
                through code.
    
                -->
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Views/Resources/UserControls/ButtonDefaultOverrideTemplate.xaml" />
                <ResourceDictionary Source="Views/Resources/Styles/Buttons/BaseButtonStyle.xaml" />
                <ResourceDictionary Source="Views/Resources/Styles/Prompts/PromptStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="TextBlock">
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <Style TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}" />
            <!-- Moved SaveButton Style -->
            <Style x:Key="SaveButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
                <Setter Property="Background" Value="#5B5B5B" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="#2A2B2C" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="10,0,10,0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="helpers:CustomProperties.CornerRadius" Value="10" />
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#18191a" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush x:Key="AppBackgroundColor" Color="#353535" />
        <!-- Add more styles for other control types as needed -->
        </ResourceDictionary>
    </Application.Resources>
</Application>
